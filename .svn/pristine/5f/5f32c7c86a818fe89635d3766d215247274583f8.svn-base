using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text.RegularExpressions;
using System.Windows.Forms;

namespace Sportsmen_Monitoring
{
    public partial class FormRegistration : Form
    {
        private List<Control> listErrorsControls = new List<Control>();
        public FormRegistration()
        {
            InitializeComponent();
        }

        private void SecondNameTB_TextChanged(object sender, EventArgs e)
        {

        }
        /// <summary>
        /// Вывод изображения
        /// </summary>
        /// <param name="isError"></param>
        /// <returns></returns>
        private PictureBox GetNewPicture(bool isError)
        {
            var pict = new PictureBox();
            pict.Size = new Size(16, 16);
            pict.SizeMode = PictureBoxSizeMode.Zoom;
            if (isError)
                pict.Image = Properties.Resources.krest_mini;
            else
                pict.Image = Properties.Resources.gal_mini;
            return pict;
        } 

        /// <summary>
        /// Проверка на правельность
        /// </summary>
        /// <returns>правельность заполнения полей</returns>
        private bool Validation()
        {
            if (listErrorsControls.Count > 0)
            {
                foreach (var a in listErrorsControls)
                {
                    Controls.Remove(a);
                }
                listErrorsControls.Clear();
            }
            if (Regex.Match(NameTB.Text, "[^a-zA-Zа-яА-ЯёЁ ]").Length > 0 || NameTB.Text.Length == 0)
            {                 
                var pict = GetNewPicture(true);
                pict.Location = new Point(NameTB.Location.X + NameTB.Width + 10, NameTB.Location.Y);
                Controls.Add(pict);
                listErrorsControls.Add(pict);
            }

            if (Regex.Match(SecondNameTB.Text, "[a-zA-Zа-яА-ЯёЁ ]").Length > 0 || NameTB.Text.Length == 0)
            {
                var pict = GetNewPicture(true);
                pict.Location = new Point(SecondNameTB.Location.X + SecondNameTB.Width + 10, SecondNameTB.Location.Y);
                Controls.Add(pict);
                listErrorsControls.Add(pict);
            }

            if (Regex.Match(LastNameTB.Text, "[a-zA-Zа-яА-ЯёЁ ]").Length > 0 || NameTB.Text.Length == 0)
            {
                var pict = GetNewPicture(true);
                pict.Location = new Point(LastNameTB.Location.X + LastNameTB.Width + 10, LastNameTB.Location.Y);
                Controls.Add(pict);
                listErrorsControls.Add(pict);
            }

            if (Regex.Match(LoginTB.Text, "[a-zA-Z0-9а-яА-ЯёЁ ]{6,}").Length > 0 || NameTB.Text.Length == 0)
            {
                var pict = GetNewPicture(true);
                pict.Location = new Point(LoginTB.Location.X + LoginTB.Location.X + 10, LoginTB.Location.Y);
                Controls.Add(pict);
                listErrorsControls.Add(pict);
            }

            if (Regex.Match(PassTB.Text, "^[a-zA-Z0-9а-яА-ЯёЁ ]").Length > 0 || NameTB.Text.Length < 6)
            {
                var pict = GetNewPicture(true);
                pict.Location = new Point(PassTB.Location.X + PassTB.Location.X + 10, PassTB.Location.Y);
                Controls.Add(pict);
                listErrorsControls.Add(pict);
            }

            if (Regex.Match(SecondPassTB.Text, "^[a-zA-Z0-9а-яА-ЯёЁ ]").Length > 0 || NameTB.Text.Length < 6)
            {
                var pict = GetNewPicture(true);
                pict.Location = new Point(SecondNameTB.Location.X + SecondNameTB.Location.X + 10, SecondNameTB.Location.Y);
                Controls.Add(pict);
                listErrorsControls.Add(pict);
            }

            if (listErrorsControls.Count == 0)
                return true;
            else
                return false;
        }
        

        private void RegB_Click(object sender, EventArgs e)
        {
            if (Validation())
            {
                Model.Instance.Users.Add(new User { FirstName = SecondNameTB.Text, Name = NameTB.Text, Patronumic = LastNameTB.Text, DateBirth = DataBirthDTP.Value, AspnetUserLogin = LoginTB.Text, Password = Model.getMd5Hash(PassTB.Text) }); 
            }
            
        }


    }
}
